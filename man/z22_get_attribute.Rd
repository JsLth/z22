% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/get_attributes.R
\name{z22_get_attribute}
\alias{z22_get_attribute}
\title{Get Census 2022 gridded attribute}
\usage{
z22_get_attribute(
  topic,
  feature,
  category,
  res = c("100m", "1km"),
  all_cells = FALSE,
  rasterize = FALSE,
  as_sf = FALSE
)
}
\arguments{
\item{topic, feature, category}{The topic, feature and category of the
request attribute. A list of available combinations can be retrieved
using \code{\link{z22_list_attributes}}. With the exception of
\code{topic = "population"} (where only the topic can be specified), all
arguments must be provided.}

\item{res}{Resolution of the grid dataset. Can be \code{"100m"}
or \code{"1km"}.}

\item{all_cells}{If \code{TRUE}, joins the retrieved attribute with the
complete grid from \code{\link{z22_grid}}. Otherwise, the attribute grid
will contain only those grid cells with one or more recorded units. Defaults
to \code{FALSE}, because loading the grid and joining with it is
computationally expensive.}

\item{rasterize}{If \code{TRUE} and the \code{terra} package is installed,
converts the attribute coordinates to a \code{\link[terra:rast]{SpatRaster}}.}

\item{as_sf}{If \code{TRUE} and the \code{sf} package is installed,
converts the attribute coordinates to an \code{sf} tibble.}
}
\value{
A tibble, \code{\link[terra:rast]{SpatRaster}} or
\code{\link[sf::st_as_sf]{sf}} tibble depending on the \code{rasterize}
and \code{as_sf} arguments.
}
\description{
Retrieve the values and coordinates of gridded attributes from the Census
2022.

An attribute is a thematic chunk divided by three aspects:

\itemize{
 \item{The general \strong{topic} of the attribute, e.g. demography or
 families (\code{topic})}
 \item{A single spatial characteristic or \strong{feature}, e.g. age or
 household size (\code{feature})}
 \item{The levels or \strong{categories} of each feature, e.g. single age
 groups (\code{category})}
}
}
\examples{
\donttest{# Get gridded population
pop <- z22_get_attribute("population", all_cells = TRUE, rasterize = TRUE)
terra::plot(pop)

# Get data about buildings using district heating
z22_get_attribute("buildings", "HEIZTYP", 1)}
}
